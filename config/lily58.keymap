/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_right_shift {
            timeout-ms = <50>;
            key-positions = <26 42>;
            bindings = <&kp GT>;
            layers = <1>
        };
        combo_left_shift {
            timeout-ms = <50>;
            key-positions = <26 43>;
            bindings = <&kp LT>;
            layers = <1>
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6    &kp N7   &kp N8    &kp N9  &kp N0   &kp EQUAL
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y     &kp U    &kp I     &kp O   &kp P    &kp BSLH
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp MINUS
                        &kp LGUI &kp LALT &to 1  &kp SPACE  &kp RET  &kp BSPC  &kp HOME  &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&kp F1     &kp F2       &kp F3       &kp F4   &kp F5   &kp F6                        &kp F7    &kp F8    &kp F9    &kp F10   &kp F11    &kp F12
&kp C_PP   &kp C_PREV   &kp C_NEXT   &kp N7   &kp N8   &kp N9                        &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp TILDE  &kp GRAVE
&kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp N4   &kp N5   &kp N6                        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans     &trans
&kp LSHFT  &CAPS       &kp N0        &kp N1   &kp N2   &kp N3  &kp LPAR    &kp RPAR  &kp PRCNT &kp CARET &kp AMPS  &kp STAR  &trans     &bt BT_CLR_ALL
                                     &trans   &trans   &to 0   &kp END     &kp HOME  &kp DEL   &kp LALT  &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};

